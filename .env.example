# ==================================================================
# ENVIRONMENT CONFIGURATION TEMPLATE
# ==================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit the .env file to version control

# ==================================================================
# API KEYS (Required)
# ==================================================================

# OpenAI API key for GPT models
# Get from: https://platform.openai.com/account/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# Anthropic API key for Claude models
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here

# Tavily API key for research assistant (optional)
# Get from: https://tavily.com/
TAVILY_API_KEY=tvly-your-tavily-api-key-here

# ==================================================================
# DATABASE CONFIGURATION
# ==================================================================

# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
POSTGRES_CONNECTION_STRING=postgresql://postgres:password@localhost:5432/chat_history

# Individual PostgreSQL settings (alternative to connection string)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=chat_history
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password

# ==================================================================
# SERVER CONFIGURATION
# ==================================================================

# Backend server settings
HOST=0.0.0.0
PORT=8000
LOG_LEVEL=info
ENVIRONMENT=development

# JWT Authentication settings
SECRET_KEY=your-super-secret-jwt-key-change-in-production-at-least-32-characters
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ==================================================================
# FRONTEND CONFIGURATION
# ==================================================================

# Node.js environment
NODE_ENV=development

# Public URLs for LangServe endpoints (used by frontend)
PUBLIC_LANGSERVE_CHATBOT_URL=http://localhost:8000/chatbot
PUBLIC_LANGSERVE_CHATBOT_PERSISTENT_URL=http://localhost:8000/chatbot-persistent
PUBLIC_LANGSERVE_CODE_URL=http://localhost:8000/code-assistant
PUBLIC_LANGSERVE_DATA_URL=http://localhost:8000/data-analyst
PUBLIC_LANGSERVE_CREATIVE_URL=http://localhost:8000/creative-writer
PUBLIC_LANGSERVE_RESEARCH_URL=http://localhost:8000/research-assistant

# Socket.IO URL for real-time communication
PUBLIC_SOCKET_IO_URL=http://localhost:3000

# ==================================================================
# SECURITY SETTINGS
# ==================================================================

# CORS settings (adjust for production)
ALLOW_ORIGINS=*
ALLOW_CREDENTIALS=true
ALLOW_METHODS=*
ALLOW_HEADERS=*

# ==================================================================
# OPTIONAL SETTINGS
# ==================================================================

# Redis configuration (for future caching implementation)
REDIS_URL=redis://localhost:6379

# Monitoring and observability
ENABLE_METRICS=false
PROMETHEUS_PORT=9090

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=10

# ==================================================================
# DEVELOPMENT SETTINGS
# ==================================================================

# Debug settings
DEBUG=false
VERBOSE_LOGGING=false

# Hot reload settings
ENABLE_HOT_RELOAD=true

# ==================================================================
# PRODUCTION NOTES
# ==================================================================
# 
# For production deployment:
# 1. Generate a strong SECRET_KEY (at least 32 characters)
# 2. Set ENVIRONMENT=production
# 3. Configure ALLOW_ORIGINS to your specific domains
# 4. Use strong database passwords
# 5. Enable HTTPS and update URLs accordingly
# 6. Consider using environment-specific .env files
#    (.env.development, .env.staging, .env.production)
#
# ==================================================================