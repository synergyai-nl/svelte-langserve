name: 'Setup Node.js and pnpm'
description: 'Setup Node.js 22 and pnpm with dependency caching and installation'
author: 'svelte-langgraph contributors'

inputs:
  frozen-lockfile:
    description: 'Use frozen lockfile for deterministic builds'
    required: false
    default: 'true'
  install-dependencies:
    description: 'Install dependencies after setup'
    required: false
    default: 'true'
  working-directory:
    description: 'Working directory for dependency installation'
    required: false
    default: '.'
  cache-key-suffix:
    description: 'Additional suffix for cache key (useful for matrix builds)'
    required: false
    default: ''

outputs:
  cache-hit:
    description: 'Whether dependencies were restored from cache'
    value: ${{ steps.setup-node.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        # Version specified in package.json packageManager field
        run_install: false

    - name: Setup Node.js
      id: setup-node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'pnpm'
        cache-dependency-path: pnpm-lock.yaml

    - name: Install dependencies
      if: inputs.install-dependencies == 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "ðŸš€ Installing dependencies..."
        if [ "${{ inputs.frozen-lockfile }}" = "true" ]; then
          echo "ðŸ“Œ Using frozen lockfile for deterministic builds"
          pnpm install --frozen-lockfile
        else
          echo "ðŸ”„ Allowing lockfile updates"
          pnpm install --no-frozen-lockfile
        fi
        echo "âœ… Dependencies installed successfully"

branding:
  icon: 'package'
  color: 'yellow'